import turtle as tu
class apj:
    def __init__(self):
        self.i_l_b = [(395, 266),(397, 277),(397, 278),(397, 285),(399, 294),(397, 299),(396, 311),(400, 331),(408, 368),(412, 376),(414, 381),(419, 394),(432, 418),(445, 442),(456, 467),(460, 478),(470, 490),(476, 505),(481, 514),(485, 526),(487, 534),(491, 538),(469, 536),(460, 525),(451, 510),(451, 505),(447, 495),(441, 492),(441, 486),(436, 485),(437, 476),(432, 474),(433, 465),(429, 463),(428, 460),(422, 458),(412, 433),(413, 429),(410, 429),(409, 426),(404, 419),(401, 418),(398, 416),(396, 415),(397, 410),(393, 409),(392, 402),(387, 399),(389, 393),(387, 391),(387, 386),(382, 385),(382, 377),(375, 373),(380, 356),(378, 349),(377, 351),(373, 348),(375, 343),(371, 341),(374, 338),(374, 333),(371, 333),(365, 329),(367, 329),(370, 325),(366, 325),(365, 322),(359, 321),(356, 319),(347, 321),(351, 316),(347, 316),(345, 314),(340, 315),(340, 311),(337, 310),(334, 310),(330, 307),(330, 304),(326, 304),(326, 299),(323, 299),(324, 289),(322, 288),(318, 292),(317, 292),(318, 288),(315, 283),(315, 280),(308, 271),(306, 265),(300, 261),(300, 258),(291, 248),(291, 243),(311, 240),(319, 241),(323, 245),(326, 253),(332, 257),(337, 257),(342, 257),(347, 255),(357, 249),(352, 256),(351, 257),(348, 260),(345, 263),(343, 263),(329, 262),(331, 268),(336, 276),(338, 280),(342, 281),(350, 286),(356, 293),(358, 296),(372, 296),(380, 294),(387, 290),(390, 283),(393, 276),(394, 276),(395, 268),(396, 277),(397, 283),(397, 297),]
        self.i_l_t = [(310, 245),(312, 241),(314, 236),(317, 233),(324, 230),(330, 225),(332, 224),(335, 224),(338, 228),(347, 228),(352, 224),(355, 222),(359, 224),(363, 227),(367, 225),(363, 208),(349, 198),(349, 185),(345, 183),(344, 187),(340, 183),(342, 175),(348, 164),(354, 160),(363, 159),(367, 160),(381, 160),(406, 128),(422, 96),(422, 87),(431, 81),(431, 77),(421, 73),(418, 69),(409, 67),(405, 54),(402, 43),(409, 35),(405, 33),(396, 30),(391, 27),(389, 23),(391, 18),(394, 13),(401, 7),(413, 4),(424, 4),(434, 3),(442, 8),(467, 22),(471, 24),(472, 25),(476, 23),(482, 21),(489, 19),(496, 18),(501, 18),(506, 18),(509, 22),(510, 27),(508, 33),(504, 39),(501, 42),(495, 47),(493, 53),(495, 59),(501, 65),(502, 69),(502, 72),(499, 75),(491, 76),(490, 80),(496, 92),(500, 96),(513, 101),(522, 105),(529, 110),(552, 107),(553, 103),(552, 100),(546, 96),(545, 91),(540, 93),(538, 92),(536, 87),(532, 85),(529, 87),(529, 87),(529, 88),(529, 85),(524, 78),(517, 77),(516, 74),(518, 73),(519, 61),(519, 57),(525, 57),(530, 51),(527, 46),(533, 38),(531, 35),(537, 30),(533, 28),(536, 25),(534, 22),(533, 17),(534, 10),(530, 9),(524, 7),(515, 4),(501, 4),(492, 4),(481, 8),(477, 10),(472, 10),(467, 7),(462, 3),(383, 2),(375, 7),(371, 12),(367, 18),(365, 26),(368, 31),(371, 38),(376, 40),(379, 46),(380, 51),(378, 62),(381, 70),(385, 71),(383, 76),(386, 84),(393, 82),(390, 89),(393, 91),(389, 94),(394, 100),(388, 102),(389, 106),(385, 107),(387, 111),(379, 117),(381, 126),(376, 126),(375, 133),(369, 137),(367, 133),(354, 140),(349, 140),(348, 136),(336, 139),(335, 145),(333, 146),(332, 153),(321, 159),(321, 170),(314, 186),(315, 191),(308, 198),(309, 204),(306, 207),(309, 211),(291, 225),(291, 232),(288, 235),(291, 242),(293, 249),(313, 243),(313, 240),(314, 237),(320, 233),(328, 229),(331, 225),]
        self.i_r_b = [(797, 116),(801, 122),(799, 126),(792, 127),(782, 137),(776, 142),(779, 147),(776, 159),(774, 168),(774, 182),(771, 182),(770, 192),(757, 192),(762, 210),(761, 204),(760, 215),(762, 223),(762, 229),(754, 230),(752, 226),(738, 204),(736, 203),(736, 216),(729, 213),(723, 208),(720, 198),(734, 188),(734, 180),(731, 179),(702, 181),(692, 181),(688, 175),(688, 172),(685, 168),(674, 165),(673, 168),(667, 164),(662, 166),(666, 172),(673, 173),(676, 176),(676, 186),(669, 193),(669, 196),(671, 199),(677, 199),(683, 199),(683, 216),(689, 222),(693, 230),(697, 242),(697, 249),(682, 253),(677, 249),(663, 260),(665, 268),(663, 274),(656, 286),(634, 301),(627, 312),(615, 329),(611, 335),(606, 336),(592, 347),(590, 359),(589, 362),(584, 364),(573, 369),(569, 374),(560, 380),(557, 384),(552, 394),(553, 401),(556, 418),(559, 444),(554, 455),(559, 493),(559, 496),(549, 501),(548, 506),(547, 514),(553, 522),(553, 524),(546, 524),(532, 527),(574, 526),(573, 521),(578, 519),(578, 516),(580, 512),(575, 508),(585, 503),(586, 499),(590, 495),(587, 491),(589, 489),(585, 482),(585, 480),(584, 477),(587, 474),(585, 466),(587, 461),(585, 456),(590, 450),(587, 444),(589, 437),(586, 430),(580, 428),(580, 424),(587, 418),(587, 415),(585, 414),(584, 409),(587, 404),(584, 400),(587, 398),(590, 395),(591, 389),(595, 387),(600, 379),(608, 376),(623, 362),(625, 358),(630, 353),(638, 349),(645, 342),(643, 339),(646, 337),(642, 335),(646, 331),(648, 324),(655, 318),(655, 314),(662, 313),(675, 301),(673, 297),(678, 293),(679, 289),(682, 286),(683, 281),(686, 278),(687, 275),(691, 273),(693, 267),(705, 271),(717, 265),(716, 261),(718, 261),(717, 258),(720, 249),(721, 244),(718, 239),(720, 237),(731, 243),(737, 243),(739, 244),(744, 249),(748, 247),(750, 250),(761, 250),(763, 247),(770, 247),(771, 249),(774, 250),(780, 250),(785, 245),(787, 241),(791, 240),(787, 237),(782, 237),(782, 235),(789, 234),(794, 235),(797, 235),(797, 228),(790, 231),(799, 220),(795, 210),(801, 208),(801, 205),(797, 201),(799, 198),(800, 166),(803, 162),(802, 155),(805, 154),(805, 152),(815, 148),(814, 144),(827, 134),(824, 130),(826, 126),(825, 122),(831, 113),(825, 113),(821, 107),(822, 102),(820, 95),(815, 94),(815, 91),(811, 89),(806, 88),(811, 83),(804, 79),(798, 82),(790, 80),(783, 97),(804, 100),(807, 126),(799, 112),(797, 116),(801, 122),(800, 125),(797, 126),(790, 125),(786, 131),(782, 137),]
        self.i_r_t = [(505, 98),(529, 108),(531, 111),(520, 131),(528, 140),(539, 144),(566, 153),(584, 155),(592, 153),(601, 156),(609, 162),(646, 167),(655, 167),(657, 162),(653, 149),(654, 146),(661, 135),(667, 134),(670, 138),(672, 148),(674, 152),(681, 152),(687, 152),(692, 149),(700, 148),(708, 146),(714, 146),(719, 147),(719, 144),(717, 140),(712, 135),(714, 131),(720, 129),(723, 125),(729, 112),(743, 104),(744, 97),(750, 94),(758, 98),(761, 98),(763, 95),(773, 91),(780, 94),(783, 98),(784, 105),(790, 107),(797, 104),(800, 108),(797, 114),(799, 120),(800, 124),(809, 126),(811, 118),(827, 126),(825, 121),(830, 112),(825, 112),(823, 111),(822, 107),(823, 104),(817, 94),(811, 90),(806, 89),(810, 83),(800, 82),(793, 82),(789, 75),(780, 74),(775, 74),(773, 74),(771, 73),(759, 72),(758, 75),(745, 78),(745, 81),(738, 81),(737, 83),(725, 90),(720, 99),(713, 99),(707, 112),(698, 112),(693, 116),(692, 124),(687, 124),(682, 121),(673, 118),(668, 116),(664, 115),(662, 118),(651, 116),(649, 120),(644, 120),(641, 125),(635, 127),(635, 134),(635, 142),(625, 142),(621, 144),(618, 140),(605, 137),(602, 132),(594, 132),(593, 133),(586, 137),(577, 130),(560, 130),(560, 127),(556, 126),(555, 128),(553, 125),(550, 125),(550, 117),(553, 113),(552, 108),(553, 104),(552, 100),(546, 97),(546, 90),(542, 91),(537, 92),(537, 87),(529, 88),(512, 101),(529, 109),]
        self.l_eye = [(479, 211),(476, 211),(467, 212),(459, 214),(455, 217),(433, 217),(432, 215),(442, 215),(445, 212),(426, 209),(426, 208),(449, 209),(456, 206),(463, 205),(461, 204),(448, 203),(445, 202),(429, 198),(431, 197),(443, 200),(448, 200),(454, 200),(460, 200),(457, 198),(452, 197),(441, 197),(439, 197),(439, 195),(444, 195),(443, 193),(439, 191),(442, 191),(445, 192),(448, 192),(452, 193),(456, 194),(460, 194),(466, 197),(470, 200),(473, 203),(476, 205),(480, 210),(472, 211),(466, 212),(-1, -1),(487, 201),(488, 199),(483, 192),(483, 191),(486, 190),(489, 190),(488, 184),(485, 179),(486, 176),(484, 172),(481, 170),(480, 166),(478, 165),(478, 169),(476, 168),(456, 158),(454, 155),(452, 159),(441, 155),(445, 160),(441, 161),(445, 162),(449, 163),(452, 164),(456, 164),(461, 165),(467, 169),(471, 172),(475, 175),(475, 179),(477, 186),(475, 186),(471, 180),(467, 176),(463, 173),(459, 171),(453, 169),(444, 167),(434, 167),(424, 169),(413, 179),(408, 179),(405, 176),(410, 179),(414, 179),(424, 171),(431, 169),(437, 169),(445, 169),(454, 171),(460, 174),(462, 177),(466, 180),(468, 186),(467, 191),(463, 187),(455, 182),(449, 178),(443, 176),(440, 176),(433, 177),(428, 177),(425, 180),(421, 181),(417, 183),(413, 183),(410, 183),(402, 182),(397, 179),(403, 183),(408, 184),(413, 185),(414, 185),(417, 185),(421, 184),(423, 184),(426, 184),(428, 183),(432, 185),(434, 186),(435, 185),(440, 187),(443, 188),(448, 188),(452, 190),(455, 191),(460, 192),(462, 192),(466, 192),(471, 194),(474, 197),(476, 197),(476, 193),(478, 194),(481, 196),(484, 198),(488, 201),(485, 194),(483, 192),(484, 190),]
        self.l_f = [(409, 346),(410, 340),(416, 333),(419, 327),(419, 324),(415, 291),(418, 282),(421, 276),(424, 271),(427, 265),(450, 258),(440, 259),(459, 246),(476, 240),(468, 240),(453, 243),(448, 245),(444, 246),(403, 273),(401, 277),(400, 281),(402, 285),(405, 293),(405, 300),(401, 308),(402, 314),(403, 315),(406, 310),(407, 311),(408, 313),(405, 317),(405, 319),(408, 326),(406, 330),(407, 338),(407, 342),(409, 348),(410, 340),(418, 326),]
        self.l1 = [(664, 138),(662, 142),(663, 152),(-1, -1),(470, 29),(460, 31),(457, 32),(453, 37),(433, 64),(422, 64),(431, 53),(441, 40),(443, 35),(450, 29),(-1, -1),(449, 20),(439, 27),(436, 33),(431, 38),(427, 43),(424, 52),(417, 58),(413, 61),(-1, -1),(410, 55),(416, 49),(419, 46),(423, 41),(425, 37),(426, 34),(430, 30),(-1, -1),(389, 186),(368, 175),(-1, -1),(365, 179),(379, 187),(-1, -1),(379, 193),(369, 186),(-1, -1),(371, 246),(366, 248),(-1, -1),(355, 229),(351, 232),(-1, -1),(332, 249),(338, 249),(-1, -1),(334, 269),(336, 269),(-1, -1),(342, 267),(-1, -1),(342, 273),(-1, -1),(475, 221),(478, 216),(-1, -1),(487, 215),(490, 210),(-1, -1),(466, 187),(463, 184),(-1, -1),(461, 182),(455, 178),(-1, -1),(433, 261),(447, 259),(-1, -1),(476, 275),(473, 272),(469, 272),(463, 271),(460, 267),(457, 264),(456, 259),(456, 255),(458, 254),(459, 252),(459, 249),(459, 246),(-1, -1),(448, 349),(-1, -1),(456, 350),(-1, -1),(419, 331),(419, 329),(-1, -1),(423, 323),(423, 319),(-1, -1),(422, 314),(421, 311),(-1, -1),(418, 292),(416, 286),(-1, -1),(495, 353),(500, 350),(-1, -1),(506, 350),(510, 347),(-1, -1),(511, 452),(516, 451),(-1, -1),(542, 442),(-1, -1),(551, 475),(-1, -1),(552, 484),(553, 492),(549, 495),(-1, -1),(510, 502),(507, 525),(-1, -1),(620, 167),(615, 170),(-1, -1),(725, 201),(727, 206),(730, 212),(733, 210),(-1, -1),(747, 211),(755, 228),(-1, -1),(560, 210),(575, 216),]
        self.mouth = [(549, 359),(539, 364),(539, 366),(515, 379),(517, 375),(508, 376),(499, 374),(492, 376),(488, 374),(479, 374),(489, 373),(494, 372),(488, 370),(482, 368),(466, 364),(455, 363),(454, 363),(449, 359),(452, 355),(462, 355),(463, 350),(465, 350),(470, 353),(478, 353),(480, 351),(484, 351),(486, 353),(495, 353),(498, 354),(504, 354),(511, 351),(513, 349),(516, 349),(523, 345),(519, 344),(521, 343),(525, 340),(525, 337),(528, 335),(531, 332),(531, 330),(525, 334),(498, 340),(496, 339),(525, 330),(522, 327),(519, 327),(519, 331),(517, 332),(516, 329),(507, 329),(505, 332),(503, 329),(487, 328),(485, 326),(476, 329),(471, 326),(464, 326),(458, 324),(453, 323),(449, 322),(444, 321),(439, 319),(433, 316),(429, 309),(426, 306),(423, 298),(424, 298),(431, 301),(437, 301),(438, 304),(441, 300),(443, 300),(448, 300),(453, 301),(457, 303),(462, 305),(467, 304),(470, 306),(486, 311),(496, 312),(505, 313),(506, 312),(539, 313),(541, 312),(541, 311),(530, 304),(525, 297),(507, 305),(508, 307),(503, 308),(499, 306),(496, 306),(491, 306),(487, 305),(484, 303),(482, 300),(478, 292),(477, 286),(477, 280),(474, 273),(481, 277),(481, 279),(482, 282),(483, 288),(490, 293),(491, 289),(501, 290),(511, 284),(518, 284),(523, 278),(527, 274),(536, 270),(538, 266),(550, 259),(558, 265),(571, 277),(577, 281),(587, 287),(593, 289),(617, 315),(590, 344),(584, 358),(580, 360),(569, 364),(559, 365),(545, 368),(551, 359),(539, 365),]
        self.r_eye_w1 = [(593, 289),(585, 287),(581, 286),(567, 273),(563, 268),(558, 264),(554, 264),(550, 259),(544, 256),(540, 255),(538, 253),(535, 251),(535, 248),(540, 245),(543, 245),(541, 242),(537, 240),(537, 233),(541, 232),(544, 232),(547, 235),(549, 239),(551, 236),(547, 230),(543, 223),(545, 222),(547, 222),(551, 225),(555, 227),(559, 228),(565, 228),(566, 228),(566, 230),(561, 231),(561, 233),(565, 233),(570, 236),(572, 235),(577, 237),(584, 242),(589, 243),(593, 241),(600, 241),(604, 241),(608, 243),(608, 247),(603, 245),(603, 246),(605, 249),(605, 251),(602, 251),(600, 254),(600, 256),(604, 260),(603, 266),(601, 272),(598, 281),(598, 284),(593, 288),(584, 286),]
        self.r_eye_w2 = [(542, 213),(546, 215),(546, 218),(551, 216),(553, 213),(555, 213),(559, 212),(567, 217),(575, 220),(578, 220),(584, 220),(588, 219),(590, 219),(590, 216),(580, 214),(581, 213),(588, 212),(590, 212),(591, 210),(584, 210),(575, 210),(570, 209),(566, 208),(558, 205),(556, 205),(554, 207),(551, 208),(549, 211),(544, 211),(543, 211),(542, 213),(543, 214),(546, 214),(546, 218),(552, 217),(-1, -1),(566, 198),(566, 197),(568, 196),(570, 196),(574, 195),(573, 191),(578, 191),(581, 192),(584, 195),(588, 196),(592, 196),(591, 198),(597, 203),(600, 207),(597, 205),(593, 203),(587, 201),(583, 200),(577, 198),(575, 198),(569, 199),(567, 199),(566, 199),(566, 198),(567, 197),(571, 195),(574, 195),(-1, -1),(582, 205),(585, 205),(587, 205),(588, 207),(586, 208),(584, 207),(583, 205),(584, 205),(585, 205),(-1, -1),(575, 203),(574, 204),(569, 204),(565, 204),(565, 202),(569, 202),(572, 202),(575, 203),(574, 204),]
        self.r_eye = [(535, 269),(538, 266),(537, 261),(533, 256),(529, 258),(524, 260),(522, 264),(520, 273),(518, 273),(518, 268),(521, 259),(525, 251),(526, 246),(529, 245),(531, 240),(531, 227),(523, 234),(528, 222),(523, 223),(520, 223),(522, 218),(514, 218),(519, 213),(522, 209),(521, 203),(523, 201),(525, 193),(520, 193),(520, 191),(522, 188),(531, 184),(531, 178),(536, 182),(544, 170),(545, 170),(542, 178),(550, 171),(551, 171),(546, 179),(555, 174),(556, 176),(545, 184),(544, 188),(557, 178),(558, 182),(564, 178),(576, 182),(602, 184),(608, 190),(609, 188),(606, 180),(615, 185),(619, 184),(620, 189),(616, 192),(616, 194),(629, 187),(631, 188),(623, 193),(625, 196),(631, 192),(641, 171),(648, 166),(650, 166),(649, 171),(647, 177),(640, 186),(634, 193),(624, 201),(625, 203),(634, 198),(642, 189),(647, 183),(655, 168),(656, 168),(650, 181),(644, 191),(641, 197),(628, 208),(628, 212),(635, 205),(647, 198),(644, 204),(631, 213),(631, 217),(652, 201),(653, 202),(649, 209),(649, 210),(653, 206),(655, 202),(659, 197),(663, 190),(665, 185),(666, 187),(663, 195),(656, 205),(654, 210),(651, 212),(649, 218),(639, 227),(639, 229),(640, 229),(645, 225),(651, 219),(658, 214),(660, 210),(666, 202),(667, 204),(662, 211),(660, 216),(646, 231),(649, 231),(654, 227),(662, 218),(670, 209),(673, 203),(677, 203),(680, 210),(680, 216),(679, 233),(674, 239),(657, 259),(660, 272),(651, 282),(646, 288),(636, 294),(633, 296),(628, 300),(628, 305),(605, 313),(576, 315),(580, 299),(589, 288),(583, 287),(568, 275),(546, 275),(539, 265),(538, 262),(534, 258),(531, 257),(524, 260),]
        self.s1 = [(433, 159),(432, 161),(422, 164),(416, 168),(420, 161),(428, 156),(432, 159),(430, 161),(-1, -1),(410, 170),(412, 169),(418, 160),(417, 158),(413, 161),(410, 167),(411, 168),(414, 166),(-1, -1),(407, 171),(408, 169),(408, 165),(410, 160),(408, 160),(406, 164),(406, 170),(408, 170),(-1, -1),(400, 167),(402, 166),(403, 165),(405, 159),(400, 159),(392, 150),(396, 158),(389, 153),(390, 155),(394, 160),(399, 163),(399, 167),(400, 168),(402, 167),(-1, -1),(351, 174),(361, 184),(368, 188),(368, 192),(377, 198),(365, 203),(368, 201),(368, 200),(356, 199),(360, 198),(364, 195),(360, 191),(357, 189),(356, 187),(360, 189),(358, 185),(353, 179),(352, 175),(357, 180),(-1, -1),(411, 150),(401, 138),(406, 141),(406, 132),(408, 135),(410, 131),(411, 142),(413, 148),(412, 149),(407, 144),(-1, -1),(452, 103),(454, 82),(458, 70),(462, 65),(466, 61),(472, 59),(470, 58),(464, 57),(469, 54),(474, 54),(480, 54),(487, 54),(489, 55),(486, 49),(470, 50),(463, 54),(461, 56),(457, 60),(454, 66),(451, 71),(448, 79),(446, 89),(447, 97),(451, 104),(453, 89),(-1, -1),(675, 155),(671, 163),(683, 163),(684, 156),(675, 155),(672, 162),(-1, -1),(687, 155),(689, 163),(695, 176),(698, 174),(704, 174),(707, 175),(715, 174),(718, 173),(719, 170),(721, 160),(722, 154),(722, 149),(716, 150),(711, 151),(707, 151),(706, 151),(701, 153),(699, 152),(698, 153),(695, 155),(692, 155),(688, 155),(688, 159),(-1, -1),(726, 127),(727, 134),(717, 135),(718, 133),(723, 132),(726, 127),(727, 134),(-1, -1),(756, 104),(760, 105),(764, 108),(765, 110),(765, 115),(771, 117),(774, 122),(777, 122),(776, 112),(778, 107),(775, 101),(780, 100),(772, 97),(768, 96),(764, 101),(761, 103),(756, 103),(761, 106),(764, 107),(766, 113),(767, 117),(-1, -1),(683, 223),(679, 245),(689, 241),(687, 231),(687, 226),(684, 224),(681, 237),(-1, -1),]
        self.teeth = [(439, 306),(444, 308),(451, 309),(457, 309),(465, 312),(470, 314),(473, 314),(479, 314),(482, 316),(485, 318),(486, 325),(482, 326),(479, 326),(477, 326),(473, 324),(471, 319),(469, 323),(466, 323),(461, 322),(458, 319),(456, 319),(453, 319),(449, 319),(448, 319),(445, 315),(442, 315),(440, 314),(438, 311),(438, 310),(438, 307),(441, 307),(444, 308),(449, 309),(-1, -1),(488, 319),(487, 326),(496, 326),(506, 326),(506, 321),(502, 321),(501, 323),(500, 321),(488, 319),(487, 323),(-1, -1),(512, 321),(518, 323),(511, 324),(512, 322),(516, 323),(-1, -1),(520, 329),(519, 330),(522, 330),(524, 329),(521, 327),(519, 329),(-1, -1),(463, 458),(465, 458),(466, 462),(473, 463),(483, 472),(484, 469),(491, 477),(489, 477),(486, 475),(467, 470),(464, 465),(464, 463),(461, 458),(465, 458),(467, 463),(473, 463),]
        self.bottom = [(410, 350),(412, 359),(413, 367),(422, 389),(426, 400),(434, 412),(438, 419),(449, 440),(456, 457),(458, 464),(469, 481),(472, 487),(476, 494),(482, 504),(493, 528),(501, 523),(508, 499),(510, 490),(515, 494),(523, 500),(531, 510),(530, 517),(534, 520),(539, 519),(541, 516),(538, 508),(542, 501),(546, 490),(546, 485),(543, 473),(540, 469),(544, 459),(546, 463),(550, 458),(555, 445),(519, 473),(515, 465),(511, 464),(509, 458),(504, 452),(507, 443),(510, 443),(514, 443),(517, 444),(521, 450),(531, 442),(537, 437),(548, 428),(551, 423),(548, 403),(548, 395),(548, 386),(548, 385),(557, 375),(562, 374),(566, 373),(571, 365),(567, 359),(562, 355),(554, 355),(552, 359),(548, 364),(541, 373),(534, 378),(520, 385),(508, 390),(501, 391),(496, 392),(489, 390),(466, 388),(460, 388),(454, 387),(449, 387),(442, 387),(437, 384),(430, 381),(424, 377),(420, 370),(418, 367),(415, 360),(410, 350),(413, 360),(413, 368),(417, 376),]
        self.eye_dots = [(459, 189),(451, 186),(-1, -1),(441, 182),(433, 181),(-1, -1),]
        self.pen = tu.Turtle()
        self.pen.hideturtle()
        self.pen.speed(0)
        self.x_offset = 500
        self.y_offset = 270


    def go(self, x, y):
        self.pen.penup()
        self.pen.goto(x-self.x_offset,(y*-1)+self.y_offset)
        self.pen.pendown()  


    def paint(self,coord,co=(0,0,0)):
        self.pen.color(co)
        t_x,t_y = coord[0]
        self.go(t_x,t_y)
        self.pen.fillcolor(co)
        self.pen.begin_fill()
        t = 0
        for i in coord[1:]:
            x,y = i
            if t:
                self.go(x,y)
                t = 0
                self.pen.begin_fill()
                continue
            if x == -1 and y == -1:
                t = 1
                self.pen.end_fill()
                continue
            else:
                self.pen.goto(x-self.x_offset,(y*-1)+self.y_offset) 
        self.pen.end_fill()


    def draw_fn(self,coord,mode = 1,co = (0,0,0),thickness = 1):
        co = (co[0]/255,co[1]/255,co[2]/255)

        self.pen.color(co)

        if mode:
            self.pen.width(thickness)
            t_x,t_y = coord[0]
            self.go(t_x,t_y)
            t = 0
            for i in coord[1:]:
                x,y = i
                if t:
                    self.go(x,y)
                    t = 0
                    continue
                if x == -1 and y == -1:
                    t = 1
                    continue
                else:
                    self.pen.goto(x-self.x_offset,(y*-1)+self.y_offset)
        else:
            self.paint(coord=coord,co = co)

    
    def draw(self,retain=True):
        self.draw_fn(self.i_l_b,mode = 0, co = (0,0,0))
        self.draw_fn(self.i_l_t,mode = 0)
        self.draw_fn(self.i_r_t,mode = 0)
        self.draw_fn(self.i_r_b,mode = 0)
        self.draw_fn(self.bottom,mode = 0)
        self.draw_fn(self.l_f,mode = 0)
        self.draw_fn(self.mouth,mode = 0)
        self.draw_fn(self.teeth,co=(255,255,255),thickness=1,mode = 0)
        self.draw_fn(self.r_eye,mode = 0)
        self.draw_fn(self.r_eye_w1,co = (255,255,255),mode = 0)
        self.draw_fn(self.r_eye_w2,co = (255,255,255),mode = 0)
        self.draw_fn(self.l_eye,mode = 0)
        self.draw_fn(self.eye_dots,mode = 0,thickness = 2,co = (255,255,255))
        self.draw_fn(self.s1,mode = 0)
        self.draw_fn(self.l1,thickness=2,mode=1)
        if retain:
            tu.done()

